#include <bits/stdc++.h>
using namespace std;

#define FASTIO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

void solve() {
    int n;
    cin >> n;
    vector<pair<long long, long long>> p(n);
    for (int i = 0; i < n; ++i) {
        cin >> p[i].first >> p[i].second;
    }
    if (n <= 4) {
        cout << "Yes\n";
        long long x1 = p[0].first;
        long long y1 = p[0].second;
        long long x2 = p[1].first;
        long long y2 = p[1].second;
        long long a = y2 - y1;
        long long b = x1 - x2;
        long long c = -a * x1 - b * y1;
        cout << a << " " << b << " " << c << "\n";
        return;
    }
    mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
    uniform_int_distribution<int> dist(0, n - 1);
    int iterations = 100;
    for (int iter = 0; iter < iterations; ++iter) {
        int i, j;
        do {
            i = dist(rng);
            j = dist(rng);
        } while (i == j);
        long long x1 = p[i].first;
        long long y1 = p[i].second;
        long long x2 = p[j].first;
        long long y2 = p[j].second;
        long long a = y2 - y1;
        long long b = x1 - x2;
        long long c = -a * x1 - b * y1;
        int count = 0;
        for (int k = 0; k < n; ++k) {
            if (a * p[k].first + b * p[k].second + c == 0) {
                count++;
            }
        }
        if (count * 2 > n) {
            cout << "Yes\n";
            cout << a << " " << b << " " << c << "\n";
            return;
        }
    }

    cout << "No\n";
}

int main() {
    FASTIO;
    int t = 1; 
    // cin >> t;
    while (t--) solve();
    return 0;
}
